// Generated by CoffeeScript 1.6.1
(function() {

  define(["js/models/uploads"], function(FileUpload) {
    return describe("FileUpload", function() {
      beforeEach(function() {
        return this.model = new FileUpload();
      });
      it("is unfinished by default", function() {
        return expect(this.model.get("finished")).toBeFalsy();
      });
      it("is not uploading by default", function() {
        return expect(this.model.get("uploading")).toBeFalsy();
      });
      it("is valid by default", function() {
        return expect(this.model.isValid()).toBeTruthy();
      });
      it("is valid for text files by default", function() {
        var file;
        file = {
          "type": "text/plain",
          "name": "filename.txt"
        };
        this.model.set("selectedFile", file);
        return expect(this.model.isValid()).toBeTruthy();
      });
      it("is valid for PNG files by default", function() {
        var file;
        file = {
          "type": "image/png",
          "name": "filename.png"
        };
        this.model.set("selectedFile", file);
        return expect(this.model.isValid()).toBeTruthy();
      });
      it("can accept a file type when explicitly set", function() {
        var file;
        file = {
          "type": "image/png",
          "name": "filename.png"
        };
        this.model.set({
          "mimeTypes": ["image/png"]
        });
        this.model.set("selectedFile", file);
        return expect(this.model.isValid()).toBeTruthy();
      });
      it("can accept a file format when explicitly set", function() {
        var file;
        file = {
          "type": "",
          "name": "filename.png"
        };
        this.model.set({
          "fileFormats": ["png"]
        });
        this.model.set("selectedFile", file);
        return expect(this.model.isValid()).toBeTruthy();
      });
      it("can accept multiple file types", function() {
        var file;
        file = {
          "type": "image/gif",
          "name": "filename.gif"
        };
        this.model.set({
          "mimeTypes": ["image/png", "image/jpeg", "image/gif"]
        });
        this.model.set("selectedFile", file);
        return expect(this.model.isValid()).toBeTruthy();
      });
      it("can accept multiple file formats", function() {
        var file;
        file = {
          "type": "image/gif",
          "name": "filename.gif"
        };
        this.model.set({
          "fileFormats": ["png", "jpeg", "gif"]
        });
        this.model.set("selectedFile", file);
        return expect(this.model.isValid()).toBeTruthy();
      });
      describe("fileTypes", function() {
        return it("returns a list of the uploader's file types", function() {
          this.model.set('mimeTypes', ['image/png', 'application/json']);
          this.model.set('fileFormats', ['gif', 'srt']);
          return expect(this.model.fileTypes()).toEqual(['PNG', 'JSON', 'GIF', 'SRT']);
        });
      });
      return describe("formatValidTypes", function() {
        it("returns a map of formatted file types and extensions", function() {
          var formatted;
          this.model.set('mimeTypes', ['image/png', 'image/jpeg', 'application/json']);
          formatted = this.model.formatValidTypes();
          return expect(formatted).toEqual({
            fileTypes: 'PNG, JPEG or JSON',
            fileExtensions: '.png, .jpeg or .json'
          });
        });
        return it("does not format with only one mime type", function() {
          var formatted;
          this.model.set('mimeTypes', ['application/pdf']);
          formatted = this.model.formatValidTypes();
          return expect(formatted).toEqual({
            fileTypes: 'PDF',
            fileExtensions: '.pdf'
          });
        });
      });
    });
  });

}).call(this);
