// Generated by CoffeeScript 1.6.1
(function() {

  this.JavascriptLoader = (function() {

    function JavascriptLoader() {}

    JavascriptLoader.executeModuleScripts = function(el, callback) {
      var callbackCalled, completed, completionHandlerGenerator, completionHandlerGeneratorIE, i, loaded, placeholders,
        _this = this;
      if (callback == null) {
        callback = null;
      }
      placeholders = el.find(".script_placeholder");
      if (placeholders.length === 0) {
        if (callback != null) {
          callback();
        }
        return;
      }
      completed = (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 1, _ref = placeholders.length; 1 <= _ref ? _i <= _ref : _i >= _ref; i = 1 <= _ref ? ++_i : --_i) {
          _results.push(false);
        }
        return _results;
      })();
      callbackCalled = false;
      completionHandlerGeneratorIE = function(index) {
        return function() {
          if (this.readyState === 'complete' || this.readyState === 'loaded') {
            return completionHandlerGenerator(index)();
          }
        };
      };
      completionHandlerGenerator = function(index) {
        return function() {
          var allComplete, flag, _i, _len;
          allComplete = true;
          completed[index] = true;
          for (_i = 0, _len = completed.length; _i < _len; _i++) {
            flag = completed[_i];
            if (!flag) {
              allComplete = false;
              break;
            }
          }
          if (allComplete && !callbackCalled) {
            callbackCalled = true;
            if (callback != null) {
              return callback();
            }
          }
        };
      };
      loaded = {};
      return placeholders.each(function(index, placeholder) {
        var s, src;
        src = $(placeholder).attr("data-src");
        if (!(src in loaded)) {
          loaded[src] = true;
          s = document.createElement('script');
          s.setAttribute('src', src);
          s.setAttribute('type', "text/javascript");
          s.onload = completionHandlerGenerator(index);
          s.onreadystatechange = completionHandlerGeneratorIE(index);
          $('head')[0].appendChild(s);
        } else {
          completionHandlerGenerator(index)();
        }
        return $(placeholder).remove();
      });
    };

    return JavascriptLoader;

  })();

}).call(this);
