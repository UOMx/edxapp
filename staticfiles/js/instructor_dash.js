(function(){var CourseInfo,PendingInstructorTasks;PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};CourseInfo=function(){function CourseInfo($section){var _this=this;this.$section=$section;this.$section.data("wrapper",this);this.instructor_tasks=new(PendingInstructorTasks())(this.$section);this.$course_errors_wrapper=this.$section.find(".course-errors-wrapper");if(this.$course_errors_wrapper.length){this.$course_error_toggle=this.$course_errors_wrapper.find(".toggle-wrapper");this.$course_error_toggle_text=this.$course_error_toggle.find("h2");this.$course_error_visibility_wrapper=this.$course_errors_wrapper.find(".course-errors-visibility-wrapper");this.$course_errors=this.$course_errors_wrapper.find(".course-error");this.$course_error_toggle_text.text(this.$course_error_toggle_text.text()+(" ("+this.$course_errors.length+")"));this.$course_error_toggle.click(function(e){e.preventDefault();if(_this.$course_errors_wrapper.hasClass("open")){return _this.$course_errors_wrapper.removeClass("open")}else{return _this.$course_errors_wrapper.addClass("open")}})}}CourseInfo.prototype.onClickTitle=function(){return this.instructor_tasks.task_poller.start()};CourseInfo.prototype.onExit=function(){return this.instructor_tasks.task_poller.stop()};return CourseInfo}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{CourseInfo:CourseInfo})}).call(this);(function(){var DataDownload,PendingInstructorTasks,ReportDownloads,std_ajax_err;std_ajax_err=function(){return window.InstructorDashboard.util.std_ajax_err.apply(this,arguments)};PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};ReportDownloads=function(){return window.InstructorDashboard.util.ReportDownloads};this.DataDownload_Certificate=function(){function DataDownload_Certificate($container){var _this=this;this.$container=$container;this.$list_issued_certificate_table_btn=this.$container.find("input[name='issued-certificates-list']'");this.$list_issued_certificate_csv_btn=this.$container.find("input[name='issued-certificates-csv']'");this.$certificate_display_table=this.$container.find(".certificate-data-display-table");this.$certificates_request_response_error=this.$container.find(".issued-certificates-error.request-response-error");this.$list_issued_certificate_table_btn.click(function(e){var url;url=_this.$list_issued_certificate_table_btn.data("endpoint");_this.clear_ui();_this.$certificate_display_table.text(gettext("Loading data..."));return $.ajax({type:"POST",url:url,error:function(std_ajax_err){_this.clear_ui();_this.$certificates_request_response_error.text(gettext("Error getting issued certificates list."));return $(".issued_certificates .issued-certificates-error.msg-error").css({display:"block"})},success:function(data){var $table_placeholder,columns,feature,grid_data,options;_this.clear_ui();options={enableCellNavigation:true,enableColumnReorder:false,forceFitColumns:true,rowHeight:35};columns=function(){var _i,_len,_ref,_results;_ref=data.queried_features;_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){feature=_ref[_i];_results.push({id:feature,field:feature,name:data.feature_names[feature]})}return _results}();grid_data=data.certificates;$table_placeholder=$("<div/>",{"class":"slickgrid"});_this.$certificate_display_table.append($table_placeholder);return new Slick.Grid($table_placeholder,grid_data,columns,options)}})});this.$list_issued_certificate_csv_btn.click(function(e){var url;_this.clear_ui();url=_this.$list_issued_certificate_csv_btn.data("endpoint");return location.href=url+"?csv=true"})}DataDownload_Certificate.prototype.clear_ui=function(){this.$certificate_display_table.empty();this.$certificates_request_response_error.empty();return $(".issued-certificates-error.msg-error").css({display:"none"})};return DataDownload_Certificate}();DataDownload=function(){function DataDownload($section){var _this=this;this.$section=$section;this.$section.data("wrapper",this);new DataDownload_Certificate(this.$section.find(".issued_certificates"));this.$list_studs_btn=this.$section.find("input[name='list-profiles']'");this.$list_studs_csv_btn=this.$section.find("input[name='list-profiles-csv']'");this.$list_proctored_exam_results_csv_btn=this.$section.find("input[name='proctored-exam-results-report']'");this.$survey_results_csv_btn=this.$section.find("input[name='survey-results-report']'");this.$list_may_enroll_csv_btn=this.$section.find("input[name='list-may-enroll-csv']");this.$list_problem_responses_csv_input=this.$section.find("input[name='problem-location']");this.$list_problem_responses_csv_btn=this.$section.find("input[name='list-problem-responses-csv']");this.$list_anon_btn=this.$section.find("input[name='list-anon-ids']'");this.$grade_config_btn=this.$section.find("input[name='dump-gradeconf']'");this.$calculate_grades_csv_btn=this.$section.find("input[name='calculate-grades-csv']'");this.$problem_grade_report_csv_btn=this.$section.find("input[name='problem-grade-report']'");this.$async_report_btn=this.$section.find("input[class='async-report-btn']'");this.$download=this.$section.find(".data-download-container");this.$download_display_text=this.$download.find(".data-display-text");this.$download_request_response_error=this.$download.find(".request-response-error");this.$reports=this.$section.find(".reports-download-container");this.$download_display_table=this.$reports.find(".profile-data-display-table");this.$reports_request_response=this.$reports.find(".request-response");this.$reports_request_response_error=this.$reports.find(".request-response-error");this.report_downloads=new(ReportDownloads())(this.$section);this.instructor_tasks=new(PendingInstructorTasks())(this.$section);this.clear_display();this.$list_anon_btn.click(function(e){var url;url=_this.$list_anon_btn.data("endpoint");return location.href=url});this.$list_proctored_exam_results_csv_btn.click(function(e){var url;url=_this.$list_proctored_exam_results_csv_btn.data("endpoint");return $.ajax({dataType:"json",url:url,error:function(std_ajax_err){_this.clear_display();_this.$reports_request_response_error.text(gettext("Error generating proctored exam results. Please try again."));return $(".msg-error").css({display:"block"})},success:function(data){_this.clear_display();_this.$reports_request_response.text(data["status"]);return $(".msg-confirm").css({display:"block"})}})});this.$survey_results_csv_btn.click(function(e){var url;url=_this.$survey_results_csv_btn.data("endpoint");return $.ajax({dataType:"json",url:url,error:function(std_ajax_err){_this.clear_display();_this.$reports_request_response_error.text(gettext("Error generating survey results. Please try again."));return $(".msg-error").css({display:"block"})},success:function(data){_this.clear_display();_this.$reports_request_response.text(data["status"]);return $(".msg-confirm").css({display:"block"})}})});this.$list_studs_csv_btn.click(function(e){var url;_this.clear_display();url=_this.$list_studs_csv_btn.data("endpoint");url+="/csv";return $.ajax({dataType:"json",url:url,error:function(std_ajax_err){_this.$reports_request_response_error.text(gettext("Error generating student profile information. Please try again."));return $(".msg-error").css({display:"block"})},success:function(data){_this.$reports_request_response.text(data["status"]);return $(".msg-confirm").css({display:"block"})}})});this.$list_studs_btn.click(function(e){var url;url=_this.$list_studs_btn.data("endpoint");_this.clear_display();_this.$download_display_table.text(gettext("Loading"));return $.ajax({dataType:"json",url:url,error:function(std_ajax_err){_this.clear_display();return _this.$download_request_response_error.text(gettext("Error getting student list."))},success:function(data){var $table_placeholder,columns,feature,grid,grid_data,options;_this.clear_display();options={enableCellNavigation:true,enableColumnReorder:false,forceFitColumns:true,rowHeight:35};columns=function(){var _i,_len,_ref,_results;_ref=data.queried_features;_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){feature=_ref[_i];_results.push({id:feature,field:feature,name:data.feature_names[feature]})}return _results}();grid_data=data.students;$table_placeholder=$("<div/>",{"class":"slickgrid"});_this.$download_display_table.append($table_placeholder);return grid=new Slick.Grid($table_placeholder,grid_data,columns,options)}})});this.$list_problem_responses_csv_btn.click(function(e){var url;_this.clear_display();url=_this.$list_problem_responses_csv_btn.data("endpoint");return $.ajax({dataType:"json",url:url,data:{problem_location:_this.$list_problem_responses_csv_input.val()},error:function(std_ajax_err){_this.$reports_request_response_error.text(JSON.parse(std_ajax_err["responseText"]));return $(".msg-error").css({display:"block"})},success:function(data){_this.$reports_request_response.text(data["status"]);return $(".msg-confirm").css({display:"block"})}})});this.$list_may_enroll_csv_btn.click(function(e){var url;_this.clear_display();url=_this.$list_may_enroll_csv_btn.data("endpoint");return $.ajax({dataType:"json",url:url,error:function(std_ajax_err){_this.$reports_request_response_error.text(gettext("Error generating list of students who may enroll. Please try again."));return $(".msg-error").css({display:"block"})},success:function(data){_this.$reports_request_response.text(data["status"]);return $(".msg-confirm").css({display:"block"})}})});this.$grade_config_btn.click(function(e){var url;url=_this.$grade_config_btn.data("endpoint");return $.ajax({dataType:"json",url:url,error:function(std_ajax_err){_this.clear_display();return _this.$download_request_response_error.text(gettext("Error retrieving grading configuration."))},success:function(data){_this.clear_display();return _this.$download_display_text.html(data["grading_config_summary"])}})});this.$async_report_btn.click(function(e){var url;_this.clear_display();url=$(e.target).data("endpoint");return $.ajax({dataType:"json",url:url,error:std_ajax_err(function(){if(e.target.name==="calculate-grades-csv"){_this.$grades_request_response_error.text(gettext("Error generating grades. Please try again."))}else if(e.target.name==="problem-grade-report"){_this.$grades_request_response_error.text(gettext("Error generating problem grade report. Please try again."))}else if(e.target.name==="export-ora2-data"){_this.$grades_request_response_error.text(gettext("Error generating ORA data report. Please try again."))}return $(".msg-error").css({display:"block"})}),success:function(data){_this.$reports_request_response.text(data["status"]);return $(".msg-confirm").css({display:"block"})}})})}DataDownload.prototype.onClickTitle=function(){this.clear_display();this.instructor_tasks.task_poller.start();return this.report_downloads.downloads_poller.start()};DataDownload.prototype.onExit=function(){this.instructor_tasks.task_poller.stop();return this.report_downloads.downloads_poller.stop()};DataDownload.prototype.clear_display=function(){this.$download_display_text.empty();this.$download_display_table.empty();this.$download_request_response_error.empty();this.$reports_request_response.empty();this.$reports_request_response_error.empty();$(".msg-confirm").css({display:"none"});return $(".msg-error").css({display:"none"})};return DataDownload}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{DataDownload:DataDownload})}).call(this);(function(){var ECommerce,PendingInstructorTasks,ReportDownloads;PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};ReportDownloads=function(){return window.InstructorDashboard.util.ReportDownloads};ECommerce=function(){var isInt;function ECommerce($section){var _this=this;this.$section=$section;this.$section.data("wrapper",this);this.$list_sale_csv_btn=this.$section.find("input[name='list-sale-csv']'");this.$list_order_sale_csv_btn=this.$section.find("input[name='list-order-sale-csv']'");this.$download_company_name=this.$section.find("input[name='download_company_name']'");this.$active_company_name=this.$section.find("input[name='active_company_name']'");this.$spent_company_name=this.$section.find('input[name="spent_company_name"]');this.$download_coupon_codes=this.$section.find('input[name="download-coupon-codes-csv"]');this.$download_registration_codes_form=this.$section.find("form#download_registration_codes");this.$active_registration_codes_form=this.$section.find("form#active_registration_codes");this.$spent_registration_codes_form=this.$section.find("form#spent_registration_codes");this.$reports=this.$section.find(".reports-download-container");this.$reports_request_response=this.$reports.find(".request-response");this.$reports_request_response_error=this.$reports.find(".request-response-error");this.report_downloads=new(ReportDownloads())(this.$section);this.instructor_tasks=new(PendingInstructorTasks())(this.$section);this.$error_msg=this.$section.find("#error-msg");this.$list_sale_csv_btn.click(function(e){var url;url=_this.$list_sale_csv_btn.data("endpoint");url+="/csv";return location.href=url});this.$list_order_sale_csv_btn.click(function(e){var url;url=_this.$list_order_sale_csv_btn.data("endpoint");return location.href=url});this.$download_coupon_codes.click(function(e){var url;url=_this.$download_coupon_codes.data("endpoint");return location.href=url});this.$download_registration_codes_form.submit(function(e){_this.$error_msg.attr("style","display: none");return true});this.$active_registration_codes_form.submit(function(e){_this.$error_msg.attr("style","display: none");return true});this.$spent_registration_codes_form.submit(function(e){_this.$error_msg.attr("style","display: none");return true})}ECommerce.prototype.onClickTitle=function(){this.clear_display();this.instructor_tasks.task_poller.start();return this.report_downloads.downloads_poller.start()};ECommerce.prototype.onExit=function(){this.clear_display();this.instructor_tasks.task_poller.stop();return this.report_downloads.downloads_poller.stop()};ECommerce.prototype.clear_display=function(){this.$error_msg.attr("style","display: none");this.$download_company_name.val("");this.$reports_request_response.empty();this.$reports_request_response_error.empty();this.$active_company_name.val("");return this.$spent_company_name.val("")};isInt=function(n){return n%1===0};return ECommerce}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{ECommerce:ECommerce})}).call(this);(function(){var Extensions,plantTimeout,std_ajax_err;plantTimeout=function(){return window.InstructorDashboard.util.plantTimeout.apply(this,arguments)};std_ajax_err=function(){return window.InstructorDashboard.util.std_ajax_err.apply(this,arguments)};Extensions=function(){function Extensions($section){var $grid_display,_this=this;this.$section=$section;this.$section.data("wrapper",this);this.$change_due_date=this.$section.find("input[name='change-due-date']");this.$reset_due_date=this.$section.find("input[name='reset-due-date']");this.$show_unit_extensions=this.$section.find("input[name='show-unit-extensions']");this.$show_student_extensions=this.$section.find("input[name='show-student-extensions']");this.$section.find(".request-response").hide();this.$section.find(".request-response-error").hide();$grid_display=this.$section.find(".data-display");this.$grid_text=$grid_display.find(".data-display-text");this.$grid_table=$grid_display.find(".data-display-table");this.$change_due_date.click(function(){var send_data;_this.clear_display();_this.$student_input=_this.$section.find("#set-extension input[name='student']");_this.$url_input=_this.$section.find("#set-extension select[name='url']");_this.$due_datetime_input=_this.$section.find("#set-extension input[name='due_datetime']");send_data={student:_this.$student_input.val(),url:_this.$url_input.val(),due_datetime:_this.$due_datetime_input.val()};return $.ajax({dataType:"json",url:_this.$change_due_date.data("endpoint"),data:send_data,success:function(data){return _this.display_response("set-extension",data)},error:function(xhr){return _this.fail_with_error("set-extension","Error changing due date",xhr)}})});this.$reset_due_date.click(function(){var send_data;_this.clear_display();_this.$student_input=_this.$section.find("#reset-extension input[name='student']");_this.$url_input=_this.$section.find("#reset-extension select[name='url']");send_data={student:_this.$student_input.val(),url:_this.$url_input.val()};return $.ajax({dataType:"json",url:_this.$reset_due_date.data("endpoint"),data:send_data,success:function(data){return _this.display_response("reset-extension",data)},error:function(xhr){return _this.fail_with_error("reset-extension","Error reseting due date",xhr)}})});this.$show_unit_extensions.click(function(){var send_data,url;_this.clear_display();_this.$grid_table.text("Loading");_this.$url_input=_this.$section.find("#view-granted-extensions select[name='url']");url=_this.$show_unit_extensions.data("endpoint");send_data={url:_this.$url_input.val()};return $.ajax({dataType:"json",url:url,data:send_data,error:function(xhr){return _this.fail_with_error("view-granted-extensions","Error getting due dates",xhr)},success:function(data){return _this.display_grid(data)}})});this.$show_student_extensions.click(function(){var send_data,url;_this.clear_display();_this.$grid_table.text("Loading");url=_this.$show_student_extensions.data("endpoint");_this.$student_input=_this.$section.find("#view-granted-extensions input[name='student']");send_data={student:_this.$student_input.val()};return $.ajax({dataType:"json",url:url,data:send_data,error:function(xhr){return _this.fail_with_error("view-granted-extensions","Error getting due dates",xhr)},success:function(data){return _this.display_grid(data)}})})}Extensions.prototype.onClickTitle=function(){};Extensions.prototype.fail_with_error=function(id,msg,xhr){var $task_error,$task_response,data;$task_error=this.$section.find("#"+id+" .request-response-error");$task_response=this.$section.find("#"+id+" .request-response");this.clear_display();data=$.parseJSON(xhr.responseText);msg+=": "+data["error"];console.warn(msg);$task_response.empty();$task_error.empty();$task_error.text(msg);return $task_error.show()};Extensions.prototype.display_response=function(id,data){var $task_error,$task_response;$task_error=this.$section.find("#"+id+" .request-response-error");$task_response=this.$section.find("#"+id+" .request-response");$task_error.empty().hide();$task_response.empty().text(data);return $task_response.show()};Extensions.prototype.display_grid=function(data){var $table_placeholder,col,columns,grid,grid_data,options;this.clear_display();this.$grid_text.text(data.title);options={enableCellNavigation:true,enableColumnReorder:false,forceFitColumns:true};columns=function(){var _i,_len,_ref,_results;_ref=data.header;_results=[];for(_i=0,_len=_ref.length;_i<_len;_i++){col=_ref[_i];_results.push({id:col,field:col,name:col})}return _results}();grid_data=data.data;$table_placeholder=$("<div/>",{"class":"slickgrid",style:"min-height: 400px"});this.$grid_table.append($table_placeholder);return grid=new Slick.Grid($table_placeholder,grid_data,columns,options)};Extensions.prototype.clear_display=function(){this.$grid_text.empty();this.$grid_table.empty();this.$section.find(".request-response-error").empty().hide();return this.$section.find(".request-response").empty().hide()};return Extensions}();if(typeof _!=="undefined"&&_!==null){_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Extensions:Extensions})}}).call(this);(function(){var $active_section,CSS_ACTIVE_SECTION,CSS_IDASH_SECTION,CSS_INSTRUCTOR_CONTENT,CSS_INSTRUCTOR_NAV,HASH_LINK_PREFIX,SafeWaiter,plantTimeout,sections_have_loaded,setup_instructor_dashboard,setup_instructor_dashboard_sections,std_ajax_err,_this=this;plantTimeout=function(){return window.InstructorDashboard.util.plantTimeout.apply(this,arguments)};std_ajax_err=function(){return window.InstructorDashboard.util.std_ajax_err.apply(this,arguments)};CSS_INSTRUCTOR_CONTENT="instructor-dashboard-content-2";CSS_ACTIVE_SECTION="active-section";CSS_IDASH_SECTION="idash-section";CSS_INSTRUCTOR_NAV="instructor-nav";HASH_LINK_PREFIX="#view-";$active_section=null;SafeWaiter=function(){function SafeWaiter(){this.after_handlers=[];this.waitFor_handlers=[];this.fired=false}SafeWaiter.prototype.after=function(f){if(this.fired){return f()}else{return this.after_handlers.push(f)}};SafeWaiter.prototype.waitFor=function(f){var _this=this;if(this.fired){return}this.waitFor_handlers.push(f);return function(){_this.waitFor_handlers=_this.waitFor_handlers.filter(function(g){return g!==f});if(_this.waitFor_handlers.length===0){_this.fired=true;_this.after_handlers.map(function(cb){return plantTimeout(0,cb)})}return f.apply(_this,arguments)}};return SafeWaiter}();sections_have_loaded=new SafeWaiter;$(function(){var instructor_dashboard_content;instructor_dashboard_content=$("."+CSS_INSTRUCTOR_CONTENT);if(instructor_dashboard_content.length>0){setup_instructor_dashboard(instructor_dashboard_content);return setup_instructor_dashboard_sections(instructor_dashboard_content)}});setup_instructor_dashboard=function(idash_content){var $links,click_first_link,link,rmatch,section_name;$links=idash_content.find("."+CSS_INSTRUCTOR_NAV).find("a");$links.each(function(i,link){return $(link).click(function(e){var $section,section_name,_ref;e.preventDefault();idash_content.find("."+CSS_INSTRUCTOR_NAV+" li").children().removeClass(CSS_ACTIVE_SECTION);idash_content.find("."+CSS_IDASH_SECTION).removeClass(CSS_ACTIVE_SECTION);section_name=$(this).data("section");$section=idash_content.find("#"+section_name);$(this).addClass(CSS_ACTIVE_SECTION);$section.addClass(CSS_ACTIVE_SECTION);analytics.pageview("instructor_section:"+section_name);location.hash=""+HASH_LINK_PREFIX+section_name;sections_have_loaded.after(function(){return $section.data("wrapper").onClickTitle()});if(!$section.is($active_section)){if($active_section!=null){if((_ref=$active_section.data("wrapper"))!=null){if(typeof _ref.onExit==="function"){_ref.onExit()}}}}return $active_section=$section})});click_first_link=function(){var link;link=$links.eq(0);return link.click()};if(new RegExp("^"+HASH_LINK_PREFIX).test(location.hash)){rmatch=new RegExp("^"+HASH_LINK_PREFIX+"(.*)").exec(location.hash);section_name=rmatch[1];link=$links.filter("[data-section='"+section_name+"']");if(link.length===1){return link.click()}else{return click_first_link()}}else{return click_first_link()}};setup_instructor_dashboard_sections=function(idash_content){var sections_to_initialize;sections_to_initialize=[{constructor:window.InstructorDashboard.sections.CourseInfo,$element:idash_content.find("."+CSS_IDASH_SECTION+"#course_info")},{constructor:window.InstructorDashboard.sections.DataDownload,$element:idash_content.find("."+CSS_IDASH_SECTION+"#data_download")},{constructor:window.InstructorDashboard.sections.ECommerce,$element:idash_content.find("."+CSS_IDASH_SECTION+"#e-commerce")},{constructor:window.InstructorDashboard.sections.Membership,$element:idash_content.find("."+CSS_IDASH_SECTION+"#membership")},{constructor:window.InstructorDashboard.sections.StudentAdmin,$element:idash_content.find("."+CSS_IDASH_SECTION+"#student_admin")},{constructor:window.InstructorDashboard.sections.Extensions,$element:idash_content.find("."+CSS_IDASH_SECTION+"#extensions")},{constructor:window.InstructorDashboard.sections.Email,$element:idash_content.find("."+CSS_IDASH_SECTION+"#send_email")},{constructor:window.InstructorDashboard.sections.InstructorAnalytics,$element:idash_content.find("."+CSS_IDASH_SECTION+"#instructor_analytics")},{constructor:window.InstructorDashboard.sections.Metrics,$element:idash_content.find("."+CSS_IDASH_SECTION+"#metrics")},{constructor:window.InstructorDashboard.sections.CohortManagement,$element:idash_content.find("."+CSS_IDASH_SECTION+"#cohort_management")},{constructor:window.InstructorDashboard.sections.Certificates,$element:idash_content.find("."+CSS_IDASH_SECTION+"#certificates")}];if(edx.instructor_dashboard.proctoring!==void 0){sections_to_initialize=sections_to_initialize.concat([{constructor:edx.instructor_dashboard.proctoring.ProctoredExamAllowanceView,$element:idash_content.find("."+CSS_IDASH_SECTION+"#special_exams")},{constructor:edx.instructor_dashboard.proctoring.ProctoredExamAttemptView,$element:idash_content.find("."+CSS_IDASH_SECTION+"#special_exams")}])}return sections_to_initialize.map(function(_arg){var $element,constructor;constructor=_arg.constructor,$element=_arg.$element;return plantTimeout(0,sections_have_loaded.waitFor(function(){return new constructor($element)}))})}}).call(this);(function(){var AuthList,AuthListWidget,BatchEnrollment,BetaTesterBulkAddition,MemberListWidget,Membership,emailStudents,plantTimeout,std_ajax_err,__hasProp={}.hasOwnProperty,__extends=function(child,parent){for(var key in parent){if(__hasProp.call(parent,key))child[key]=parent[key]}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor;child.__super__=parent.prototype;return child};plantTimeout=function(){return window.InstructorDashboard.util.plantTimeout.apply(this,arguments)};std_ajax_err=function(){return window.InstructorDashboard.util.std_ajax_err.apply(this,arguments)};emailStudents=false;MemberListWidget=function(){function MemberListWidget($container,params){var template_html,_this=this;this.$container=$container;if(params==null){params={}}params=_.defaults(params,{title:"Member List",info:"Use this list to manage members.",labels:["field1","field2","field3"],add_placeholder:"Enter name",add_btn_label:"Add Member",add_handler:function(input){}});template_html=$("#member-list-widget-template").html();this.$container.html(Mustache.render(template_html,params));this.$('input[type="button"].add').click(function(){return typeof params.add_handler==="function"?params.add_handler(_this.$(".add-field").val()):void 0})}MemberListWidget.prototype.clear_input=function(){return this.$(".add-field").val("")};MemberListWidget.prototype.clear_rows=function(){return this.$("table tbody").empty()};MemberListWidget.prototype.add_row=function(row_array){var $tbody,$td,$tr,item,_i,_len;$tbody=this.$("table tbody");$tr=$("<tr>");for(_i=0,_len=row_array.length;_i<_len;_i++){item=row_array[_i];$td=$("<td>");if(item instanceof jQuery){$td.append(item)}else{$td.text(item)}$tr.append($td)}return $tbody.append($tr)};MemberListWidget.prototype.$=function(selector){var s;if(this.debug!=null){s=this.$container.find(selector);if((s!=null?s.length:void 0)!==1){console.warn("local selector '"+selector+"' found ("+s.length+") results")}return s}else{return this.$container.find(selector)}};return MemberListWidget}();AuthListWidget=function(_super){__extends(AuthListWidget,_super);function AuthListWidget($container,rolename,$error_section){var _this=this;this.rolename=rolename;this.$error_section=$error_section;AuthListWidget.__super__.constructor.call(this,$container,{title:$container.data("display-name"),info:$container.data("info-text"),labels:[gettext("Username"),gettext("Email"),gettext("Revoke access")],add_placeholder:gettext("Enter username or email"),add_btn_label:$container.data("add-button-label"),add_handler:function(input){return _this.add_handler(input)}});this.debug=true;this.list_endpoint=$container.data("list-endpoint");this.modify_endpoint=$container.data("modify-endpoint");if(this.rolename==null){throw"AuthListWidget missing @rolename"}this.reload_list()}AuthListWidget.prototype.re_view=function(){this.clear_errors();this.clear_input();return this.reload_list()};AuthListWidget.prototype.add_handler=function(input){var _this=this;if(input!=null&&input!==""){return this.modify_member_access(input,"allow",function(error){if(error!==null){return _this.show_errors(error)}_this.clear_errors();_this.clear_input();return _this.reload_list()})}else{return this.show_errors(gettext("Please enter a username or email."))}};AuthListWidget.prototype.reload_list=function(){var _this=this;return this.get_member_list(function(error,member_list){if(error!==null){return _this.show_errors(error)}_this.clear_rows();return _.each(member_list,function(member){var $revoke_btn,label_trans;label_trans=gettext("Revoke access");$revoke_btn=$(_.template('<div class="revoke"><i class="icon fa fa-times-circle" aria-hidden="true"></i> <%= label %></div>')({label:label_trans}),{"class":"revoke"});$revoke_btn.click(function(){return _this.modify_member_access(member.email,"revoke",function(error){if(error!==null){return _this.show_errors(error)}_this.clear_errors();return _this.reload_list()})});return _this.add_row([member.username,member.email,$revoke_btn])})})};AuthListWidget.prototype.clear_errors=function(){var _ref;return(_ref=this.$error_section)!=null?_ref.text(""):void 0};AuthListWidget.prototype.show_errors=function(msg){var _ref;return(_ref=this.$error_section)!=null?_ref.text(msg):void 0};AuthListWidget.prototype.get_member_list=function(cb){var _this=this;return $.ajax({dataType:"json",url:this.list_endpoint,data:{rolename:this.rolename},success:function(data){return typeof cb==="function"?cb(null,data[_this.rolename]):void 0},error:std_ajax_err(function(){})})};AuthListWidget.prototype.modify_member_access=function(unique_student_identifier,action,cb){var _this=this;return $.ajax({dataType:"json",url:this.modify_endpoint,data:{unique_student_identifier:unique_student_identifier,rolename:this.rolename,action:action},success:function(data){return _this.member_response(data)},error:std_ajax_err(function(){return typeof cb==="function"?cb(gettext("Error changing user's permissions.")):void 0})})};AuthListWidget.prototype.member_response=function(data){var msg;this.clear_errors();this.clear_input();if(data.userDoesNotExist){msg=gettext("Could not find a user with username or email address '<%= identifier %>'.");return this.show_errors(_.template(msg,{identifier:data.unique_student_identifier}))}else if(data.inactiveUser){msg=gettext("Error: User '<%= username %>' has not yet activated their account. Users must create and activate their accounts before they can be assigned a role.");return this.show_errors(_.template(msg,{username:data.unique_student_identifier}))}else if(data.removingSelfAsInstructor){return this.show_errors(gettext("Error: You cannot remove yourself from the Instructor group!"))}else{return this.reload_list()}};return AuthListWidget}(MemberListWidget);this.AutoEnrollmentViaCsv=function(){function AutoEnrollmentViaCsv($container){var _this=this;this.$container=$container;this.$student_enrollment_form=this.$container.find("form#student-auto-enroll-form");this.$enrollment_signup_button=this.$container.find("[name='enrollment_signup_button']");this.$students_list_file=this.$container.find("input[name='students_list']");this.$csrf_token=this.$container.find("input[name='csrfmiddlewaretoken']");this.$results=this.$container.find("div.results");this.$browse_button=this.$container.find("#browseBtn");this.$browse_file=this.$container.find("#browseFile");this.processing=false;this.$browse_button.on("change",function(event){if(event.currentTarget.files.length===1){return _this.$browse_file.val(event.currentTarget.value.substring(event.currentTarget.value.lastIndexOf("\\")+1))}});this.$enrollment_signup_button.click(function(){return _this.$student_enrollment_form.submit(function(event){var data;if(_this.processing){return false}_this.processing=true;event.preventDefault();data=new FormData(event.currentTarget);$.ajax({dataType:"json",type:"POST",url:event.currentTarget.action,data:data,processData:false,contentType:false,
success:function(data){_this.processing=false;return _this.display_response(data)}});return false})})}AutoEnrollmentViaCsv.prototype.display_response=function(data_from_server){var error,errors,general_error,render_response,result_from_server_is_success,warning,warnings,_i,_j,_k,_len,_len1,_len2,_ref,_ref1,_ref2,_this=this;this.$results.empty();errors=[];warnings=[];result_from_server_is_success=true;if(data_from_server.general_errors.length){result_from_server_is_success=false;_ref=data_from_server.general_errors;for(_i=0,_len=_ref.length;_i<_len;_i++){general_error=_ref[_i];general_error["is_general_error"]=true;errors.push(general_error)}}if(data_from_server.row_errors.length){result_from_server_is_success=false;_ref1=data_from_server.row_errors;for(_j=0,_len1=_ref1.length;_j<_len1;_j++){error=_ref1[_j];error["is_general_error"]=false;errors.push(error)}}if(data_from_server.warnings.length){result_from_server_is_success=false;_ref2=data_from_server.warnings;for(_k=0,_len2=_ref2.length;_k<_len2;_k++){warning=_ref2[_k];warning["is_general_error"]=false;warnings.push(warning)}}render_response=function(title,message,type,student_results){var details,response_message,student_result,_l,_len3;details=[];for(_l=0,_len3=student_results.length;_l<_len3;_l++){student_result=student_results[_l];if(student_result.is_general_error){details.push(student_result.response)}else{response_message=student_result.username+"  ("+student_result.email+"):  "+"   ("+student_result.response+")";details.push(response_message)}}return _this.$results.append(_this.render_notification_view(type,title,message,details))};if(errors.length){render_response(gettext("Errors"),gettext("The following errors were generated:"),"error",errors)}if(warnings.length){render_response(gettext("Warnings"),gettext("The following warnings were generated:"),"warning",warnings)}if(result_from_server_is_success){return render_response(gettext("Success"),gettext("All accounts were created successfully."),"confirmation",[])}};AutoEnrollmentViaCsv.prototype.render_notification_view=function(type,title,message,details){var notification_model,view;notification_model=new NotificationModel;notification_model.set({type:type,title:title,message:message,details:details});view=new NotificationView({model:notification_model});view.render();return view.$el.html()};return AutoEnrollmentViaCsv}();BetaTesterBulkAddition=function(){function BetaTesterBulkAddition($container){var _this=this;this.$container=$container;this.$identifier_input=this.$container.find("textarea[name='student-ids-for-beta']");this.$btn_beta_testers=this.$container.find("input[name='beta-testers']");this.$checkbox_autoenroll=this.$container.find("input[name='auto-enroll']");this.$checkbox_emailstudents=this.$container.find("input[name='email-students-beta']");this.$task_response=this.$container.find(".request-response");this.$request_response_error=this.$container.find(".request-response-error");this.$btn_beta_testers.click(function(event){var autoEnroll,send_data;emailStudents=_this.$checkbox_emailstudents.is(":checked");autoEnroll=_this.$checkbox_autoenroll.is(":checked");send_data={action:$(event.target).data("action"),identifiers:_this.$identifier_input.val(),email_students:emailStudents,auto_enroll:autoEnroll};return $.ajax({dataType:"json",type:"POST",url:_this.$btn_beta_testers.data("endpoint"),data:send_data,success:function(data){return _this.display_response(data)},error:std_ajax_err(function(){return _this.fail_with_error(gettext("Error adding/removing users as beta testers."))})})})}BetaTesterBulkAddition.prototype.clear_input=function(){this.$identifier_input.val("");this.$checkbox_emailstudents.attr("checked",true);return this.$checkbox_autoenroll.attr("checked",true)};BetaTesterBulkAddition.prototype.fail_with_error=function(msg){console.warn(msg);this.clear_input();this.$task_response.empty();this.$request_response_error.empty();return this.$request_response_error.text(msg)};BetaTesterBulkAddition.prototype.display_response=function(data_from_server){var errors,no_users,render_list,sr,student_results,successes,_i,_len,_ref,_this=this;this.clear_input();this.$task_response.empty();this.$request_response_error.empty();errors=[];successes=[];no_users=[];_ref=data_from_server.results;for(_i=0,_len=_ref.length;_i<_len;_i++){student_results=_ref[_i];if(student_results.userDoesNotExist){no_users.push(student_results)}else if(student_results.error){errors.push(student_results)}else{successes.push(student_results)}}render_list=function(label,ids){var identifier,ids_list,task_res_section,_j,_len1;task_res_section=$("<div/>",{"class":"request-res-section"});task_res_section.append($("<h3/>",{text:label}));ids_list=$("<ul/>");task_res_section.append(ids_list);for(_j=0,_len1=ids.length;_j<_len1;_j++){identifier=ids[_j];ids_list.append($("<li/>",{text:identifier}))}return _this.$task_response.append(task_res_section)};if(successes.length&&data_from_server.action==="add"){render_list(gettext("These users were successfully added as beta testers:"),function(){var _j,_len1,_results;_results=[];for(_j=0,_len1=successes.length;_j<_len1;_j++){sr=successes[_j];_results.push(sr.identifier)}return _results}())}if(successes.length&&data_from_server.action==="remove"){render_list(gettext("These users were successfully removed as beta testers:"),function(){var _j,_len1,_results;_results=[];for(_j=0,_len1=successes.length;_j<_len1;_j++){sr=successes[_j];_results.push(sr.identifier)}return _results}())}if(errors.length&&data_from_server.action==="add"){render_list(gettext("These users were not added as beta testers:"),function(){var _j,_len1,_results;_results=[];for(_j=0,_len1=errors.length;_j<_len1;_j++){sr=errors[_j];_results.push(sr.identifier)}return _results}())}if(errors.length&&data_from_server.action==="remove"){render_list(gettext("These users were not removed as beta testers:"),function(){var _j,_len1,_results;_results=[];for(_j=0,_len1=errors.length;_j<_len1;_j++){sr=errors[_j];_results.push(sr.identifier)}return _results}())}if(no_users.length){no_users.push($(gettext("Users must create and activate their account before they can be promoted to beta tester.")));return render_list(gettext("Could not find users associated with the following identifiers:"),function(){var _j,_len1,_results;_results=[];for(_j=0,_len1=no_users.length;_j<_len1;_j++){sr=no_users[_j];_results.push(sr.identifier)}return _results}())}};return BetaTesterBulkAddition}();BatchEnrollment=function(){function BatchEnrollment($container){var _this=this;this.$container=$container;this.$identifier_input=this.$container.find("textarea[name='student-ids']");this.$enrollment_button=this.$container.find(".enrollment-button");this.$is_course_white_label=this.$container.find("#is_course_white_label").val();this.$reason_field=this.$container.find("textarea[name='reason-field']");this.$checkbox_autoenroll=this.$container.find("input[name='auto-enroll']");this.$checkbox_emailstudents=this.$container.find("input[name='email-students']");this.$task_response=this.$container.find(".request-response");this.$request_response_error=this.$container.find(".request-response-error");this.$enrollment_button.click(function(event){var send_data;if(_this.$is_course_white_label==="True"){if(!_this.$reason_field.val()){_this.fail_with_error(gettext("Reason field should not be left blank."));return false}}emailStudents=_this.$checkbox_emailstudents.is(":checked");send_data={action:$(event.target).data("action"),identifiers:_this.$identifier_input.val(),auto_enroll:_this.$checkbox_autoenroll.is(":checked"),email_students:emailStudents,reason:_this.$reason_field.val()};return $.ajax({dataType:"json",type:"POST",url:$(event.target).data("endpoint"),data:send_data,success:function(data){return _this.display_response(data)},error:std_ajax_err(function(){return _this.fail_with_error(gettext("Error enrolling/unenrolling users."))})})})}BatchEnrollment.prototype.clear_input=function(){this.$identifier_input.val("");this.$reason_field.val("");this.$checkbox_emailstudents.attr("checked",true);return this.$checkbox_autoenroll.attr("checked",true)};BatchEnrollment.prototype.fail_with_error=function(msg){console.warn(msg);this.clear_input();this.$task_response.empty();this.$request_response_error.empty();return this.$request_response_error.text(msg)};BatchEnrollment.prototype.display_response=function(data_from_server){var allowed,autoenrolled,enrolled,errors,errors_label,invalid_identifier,notenrolled,notunenrolled,render_list,sr,student_results,_i,_j,_len,_len1,_ref,_this=this;this.clear_input();this.$task_response.empty();this.$request_response_error.empty();invalid_identifier=[];errors=[];enrolled=[];allowed=[];autoenrolled=[];notenrolled=[];notunenrolled=[];_ref=data_from_server.results;for(_i=0,_len=_ref.length;_i<_len;_i++){student_results=_ref[_i];if(student_results.invalidIdentifier){invalid_identifier.push(student_results)}else if(student_results.error){errors.push(student_results)}else if(student_results.after.enrollment){enrolled.push(student_results)}else if(student_results.after.allowed){if(student_results.after.auto_enroll){autoenrolled.push(student_results)}else{allowed.push(student_results)}}else if(data_from_server.action==="unenroll"&&!student_results.before.enrollment&&!student_results.before.allowed){notunenrolled.push(student_results)}else if(!student_results.after.enrollment){notenrolled.push(student_results)}else{console.warn("student results not reported to user");console.warn(student_results)}}render_list=function(label,ids){var identifier,ids_list,task_res_section,_j,_len1;task_res_section=$("<div/>",{"class":"request-res-section"});task_res_section.append($("<h3/>",{text:label}));ids_list=$("<ul/>");task_res_section.append(ids_list);for(_j=0,_len1=ids.length;_j<_len1;_j++){identifier=ids[_j];ids_list.append($("<li/>",{text:identifier}))}return _this.$task_response.append(task_res_section)};if(invalid_identifier.length){render_list(gettext("The following email addresses and/or usernames are invalid:"),function(){var _j,_len1,_results;_results=[];for(_j=0,_len1=invalid_identifier.length;_j<_len1;_j++){sr=invalid_identifier[_j];_results.push(sr.identifier)}return _results}())}if(errors.length){errors_label=function(){if(data_from_server.action==="enroll"){return"There was an error enrolling:"}else if(data_from_server.action==="unenroll"){return"There was an error unenrolling:"}else{console.warn("unknown action from server '"+data_from_server.action+"'");return"There was an error processing:"}}();for(_j=0,_len1=errors.length;_j<_len1;_j++){student_results=errors[_j];render_list(errors_label,function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=errors.length;_k<_len2;_k++){sr=errors[_k];_results.push(sr.identifier)}return _results}())}}if(enrolled.length&&emailStudents){render_list(gettext("Successfully enrolled and sent email to the following users:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=enrolled.length;_k<_len2;_k++){sr=enrolled[_k];_results.push(sr.identifier)}return _results}())}if(enrolled.length&&!emailStudents){render_list(gettext("Successfully enrolled the following users:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=enrolled.length;_k<_len2;_k++){sr=enrolled[_k];_results.push(sr.identifier)}return _results}())}if(allowed.length&&emailStudents){render_list(gettext("Successfully sent enrollment emails to the following users. They will be allowed to enroll once they register:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=allowed.length;_k<_len2;_k++){sr=allowed[_k];_results.push(sr.identifier)}return _results}())}if(allowed.length&&!emailStudents){render_list(gettext("These users will be allowed to enroll once they register:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=allowed.length;_k<_len2;_k++){sr=allowed[_k];_results.push(sr.identifier)}return _results}())}if(autoenrolled.length&&emailStudents){render_list(gettext("Successfully sent enrollment emails to the following users. They will be enrolled once they register:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=autoenrolled.length;_k<_len2;_k++){sr=autoenrolled[_k];_results.push(sr.identifier)}return _results}())}if(autoenrolled.length&&!emailStudents){render_list(gettext("These users will be enrolled once they register:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=autoenrolled.length;_k<_len2;_k++){sr=autoenrolled[_k];_results.push(sr.identifier)}return _results}())}if(notenrolled.length&&emailStudents){render_list(gettext("Emails successfully sent. The following users are no longer enrolled in the course:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=notenrolled.length;_k<_len2;_k++){sr=notenrolled[_k];_results.push(sr.identifier)}return _results}())}if(notenrolled.length&&!emailStudents){render_list(gettext("The following users are no longer enrolled in the course:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=notenrolled.length;_k<_len2;_k++){sr=notenrolled[_k];_results.push(sr.identifier)}return _results}())}if(notunenrolled.length){return render_list(gettext("These users were not affiliated with the course so could not be unenrolled:"),function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=notunenrolled.length;_k<_len2;_k++){sr=notunenrolled[_k];_results.push(sr.identifier)}return _results}())}};return BatchEnrollment}();AuthList=function(){function AuthList($container,rolename){var _this=this;this.$container=$container;this.rolename=rolename;this.$display_table=this.$container.find(".auth-list-table");this.$request_response_error=this.$container.find(".request-response-error");this.$add_section=this.$container.find(".auth-list-add");this.$allow_field=this.$add_section.find("input[name='email']");this.$allow_button=this.$add_section.find("input[name='allow']");this.$allow_button.click(function(){_this.access_change(_this.$allow_field.val(),"allow",function(){return _this.reload_auth_list()});return _this.$allow_field.val("")});this.reload_auth_list()}AuthList.prototype.reload_auth_list=function(){var load_auth_list,_this=this;load_auth_list=function(data){var $table_placeholder,WHICH_CELL_IS_REVOKE,columns,grid,options,table_data;_this.$request_response_error.empty();_this.$display_table.empty();options={enableCellNavigation:true,enableColumnReorder:false,forceFitColumns:true};WHICH_CELL_IS_REVOKE=3;columns=[{id:"username",field:"username",name:"Username"},{id:"email",field:"email",name:"Email"},{id:"first_name",field:"first_name",name:"First Name"},{id:"revoke",field:"revoke",name:"Revoke",formatter:function(row,cell,value,columnDef,dataContext){return"<span class='revoke-link'>Revoke Access</span>"}}];table_data=data[_this.rolename];$table_placeholder=$("<div/>",{"class":"slickgrid"});_this.$display_table.append($table_placeholder);grid=new Slick.Grid($table_placeholder,table_data,columns,options);return grid.onClick.subscribe(function(e,args){var item;item=args.grid.getDataItem(args.row);if(args.cell===WHICH_CELL_IS_REVOKE){return _this.access_change(item.email,"revoke",function(){return _this.reload_auth_list()})}})};return $.ajax({dataType:"json",url:this.$display_table.data("endpoint"),data:{rolename:this.rolename},success:load_auth_list,error:std_ajax_err(function(){return _this.$request_response_error.text("Error fetching list for '"+_this.rolename+"'")})})};AuthList.prototype.refresh=function(){this.$display_table.empty();return this.reload_auth_list()};AuthList.prototype.access_change=function(email,action,cb){var _this=this;return $.ajax({dataType:"json",url:this.$add_section.data("endpoint"),data:{email:email,rolename:this.rolename,action:action},success:function(data){return typeof cb==="function"?cb(data):void 0},error:std_ajax_err(function(){return _this.$request_response_error.text(gettext("Error changing user's permissions."))})})};return AuthList}();Membership=function(){function Membership($section){var auth_list,_i,_len,_ref,_this=this;this.$section=$section;this.$section.data("wrapper",this);plantTimeout(0,function(){return new BatchEnrollment(_this.$section.find(".batch-enrollment"))});plantTimeout(0,function(){return new AutoEnrollmentViaCsv(_this.$section.find(".auto_enroll_csv"))});plantTimeout(0,function(){return new BetaTesterBulkAddition(_this.$section.find(".batch-beta-testers"))});this.$list_selector=this.$section.find("select#member-lists-selector");this.$auth_list_containers=this.$section.find(".auth-list-container");this.$auth_list_errors=this.$section.find(".member-lists-management .request-response-error");this.auth_lists=_.map(this.$auth_list_containers,function(auth_list_container){var rolename;rolename=$(auth_list_container).data("rolename");return new AuthListWidget($(auth_list_container),rolename,_this.$auth_list_errors)});this.$list_selector.empty();_ref=this.auth_lists;for(_i=0,_len=_ref.length;_i<_len;_i++){auth_list=_ref[_i];this.$list_selector.append($("<option/>",{text:auth_list.$container.data("display-name"),data:{auth_list:auth_list}}))}if(this.auth_lists.length===0){this.$list_selector.hide()}this.$list_selector.change(function(){var $opt,_j,_len1,_ref1;$opt=_this.$list_selector.children("option:selected");if(!($opt.length>0)){return}_ref1=_this.auth_lists;for(_j=0,_len1=_ref1.length;_j<_len1;_j++){auth_list=_ref1[_j];auth_list.$container.removeClass("active")}auth_list=$opt.data("auth_list");auth_list.$container.addClass("active");return auth_list.re_view()});this.$list_selector.change()}Membership.prototype.onClickTitle=function(){};return Membership}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Membership:Membership})}).call(this);(function(){var Metrics,plantTimeout,std_ajax_err;plantTimeout=function(){return window.InstructorDashboard.util.plantTimeout.apply(this,arguments)};std_ajax_err=function(){return window.InstructorDashboard.util.std_ajax_err.apply(this,arguments)};Metrics=function(){function Metrics($section){this.$section=$section;this.$section.data("wrapper",this)}Metrics.prototype.onClickTitle=function(){};return Metrics}();if(typeof _!=="undefined"&&_!==null){_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Metrics:Metrics})}}).call(this);(function(){var Email,KeywordValidator,PendingInstructorTasks,SendEmail,create_email_content_table,create_email_message_views,create_task_list_table,plantTimeout,std_ajax_err;plantTimeout=function(){return window.InstructorDashboard.util.plantTimeout.apply(this,arguments)};std_ajax_err=function(){return window.InstructorDashboard.util.std_ajax_err.apply(this,arguments)};PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};create_task_list_table=function(){return window.InstructorDashboard.util.create_task_list_table.apply(this,arguments)};create_email_content_table=function(){return window.InstructorDashboard.util.create_email_content_table.apply(this,arguments)};create_email_message_views=function(){return window.InstructorDashboard.util.create_email_message_views.apply(this,arguments)};KeywordValidator=function(){return window.InstructorDashboard.util.KeywordValidator};SendEmail=function(){function SendEmail($container){var _this=this;this.$container=$container;this.$emailEditor=XBlock.initializeBlock($(".xblock-studio_view"));this.$send_to=this.$container.find("select[name='send_to']'");this.$subject=this.$container.find("input[name='subject']'");this.$btn_send=this.$container.find("input[name='send']'");this.$task_response=this.$container.find(".request-response");this.$request_response_error=this.$container.find(".request-response-error");this.$content_request_response_error=this.$container.find(".content-request-response-error");this.$history_request_response_error=this.$container.find(".history-request-response-error");this.$btn_task_history_email=this.$container.find("input[name='task-history-email']'");this.$btn_task_history_email_content=this.$container.find("input[name='task-history-email-content']'");this.$table_task_history_email=this.$container.find(".task-history-email-table");this.$table_email_content_history=this.$container.find(".content-history-email-table");this.$email_content_table_inner=this.$container.find(".content-history-table-inner");this.$email_messages_wrapper=this.$container.find(".email-messages-wrapper");this.$btn_send.click(function(){var confirm_message,full_confirm_message,message,send_data,send_to,subject,success_message,validation;if(_this.$subject.val()===""){return alert(gettext("Your message must have a subject."))}else if(_this.$emailEditor.save()["data"]===""){return alert(gettext("Your message cannot be blank."))}else{validation=KeywordValidator().validate_string(_this.$emailEditor.save()["data"]);if(!validation.is_valid){message=gettext("There are invalid keywords in your email. Please check the following keywords and try again:");message+="\n"+validation.invalid_keywords.join("\n");alert(message);return}success_message=gettext("Your email was successfully queued for sending.");send_to=_this.$send_to.val().toLowerCase();if(send_to==="myself"){confirm_message=gettext("You are about to send an email titled '<%= subject %>' to yourself. Is this OK?")}else if(send_to==="staff"){confirm_message=gettext("You are about to send an email titled '<%= subject %>' to everyone who is staff or instructor on this course. Is this OK?")}else{confirm_message=gettext("You are about to send an email titled '<%= subject %>' to ALL (everyone who is enrolled in this course as student, staff, or instructor). Is this OK?");success_message=gettext("Your email was successfully queued for sending. Please note that for large classes, it may take up to an hour (or more, if other courses are simultaneously sending email) to send all emails.")}subject=_this.$subject.val();full_confirm_message=_.template(confirm_message)({subject:subject});if(confirm(full_confirm_message)){send_data={action:"send",send_to:_this.$send_to.val(),subject:_this.$subject.val(),message:_this.$emailEditor.save()["data"]};return $.ajax({type:"POST",dataType:"json",url:_this.$btn_send.data("endpoint"),data:send_data,success:function(data){return _this.display_response(success_message)},error:std_ajax_err(function(){return _this.fail_with_error(gettext("Error sending email."))})})}else{_this.$task_response.empty();return _this.$request_response_error.empty()}}});this.$btn_task_history_email.click(function(){var url;url=_this.$btn_task_history_email.data("endpoint");return $.ajax({dataType:"json",url:url,success:function(data){if(data.tasks.length){return create_task_list_table(_this.$table_task_history_email,data.tasks)}else{_this.$history_request_response_error.text(gettext("There is no email history for this course."));return _this.$history_request_response_error.css({display:"block"})}},error:std_ajax_err(function(){return _this.$history_request_response_error.text(gettext("There was an error obtaining email task history for this course."))})})});this.$btn_task_history_email_content.click(function(){var url;url=_this.$btn_task_history_email_content.data("endpoint");return $.ajax({dataType:"json",url:url,success:function(data){if(data.emails.length){create_email_content_table(_this.$table_email_content_history,_this.$email_content_table_inner,data.emails);return create_email_message_views(_this.$email_messages_wrapper,data.emails)}else{_this.$content_request_response_error.text(gettext("There is no email history for this course."));return _this.$content_request_response_error.css({display:"block"})}},error:std_ajax_err(function(){return _this.$content_request_response_error.text(gettext("There was an error obtaining email content history for this course."))})})})}SendEmail.prototype.fail_with_error=function(msg){console.warn(msg);this.$task_response.empty();this.$request_response_error.empty();this.$request_response_error.text(msg);return $(".msg-confirm").css({display:"none"})};SendEmail.prototype.display_response=function(data_from_server){this.$task_response.empty();this.$request_response_error.empty();this.$task_response.text(data_from_server);return $(".msg-confirm").css({display:"block"})};return SendEmail}();Email=function(){function Email($section){var _this=this;this.$section=$section;this.$section.data("wrapper",this);plantTimeout(0,function(){return new SendEmail(_this.$section.find(".send-email"))});this.instructor_tasks=new(PendingInstructorTasks())(this.$section)}Email.prototype.onClickTitle=function(){return this.instructor_tasks.task_poller.start()};Email.prototype.onExit=function(){return this.instructor_tasks.task_poller.stop()};return Email}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Email:Email})}).call(this);(function(){var PendingInstructorTasks,create_task_list_table,find_and_assert,std_ajax_err;std_ajax_err=function(){return window.InstructorDashboard.util.std_ajax_err.apply(this,arguments)};create_task_list_table=function(){return window.InstructorDashboard.util.create_task_list_table.apply(this,arguments)};PendingInstructorTasks=function(){return window.InstructorDashboard.util.PendingInstructorTasks};find_and_assert=function($root,selector){var item;item=$root.find(selector);if(item.length!==1){console.error("element selection failed for '"+selector+"' resulted in length "+item.length);throw"Failed Element Selection"}else{return item}};this.StudentAdmin=function(){function StudentAdmin($section){var _this=this;this.$section=$section;this.$section.data("wrapper",this);this.$field_student_select_progress=find_and_assert(this.$section,"input[name='student-select-progress']");this.$field_student_select_grade=find_and_assert(this.$section,"input[name='student-select-grade']");this.$progress_link=find_and_assert(this.$section,"a.progress-link");this.$field_problem_select_single=find_and_assert(this.$section,"input[name='problem-select-single']");this.$btn_reset_attempts_single=find_and_assert(this.$section,"input[name='reset-attempts-single']");this.$btn_delete_state_single=this.$section.find("input[name='delete-state-single']");this.$btn_rescore_problem_single=this.$section.find("input[name='rescore-problem-single']");this.$btn_task_history_single=this.$section.find("input[name='task-history-single']");this.$table_task_history_single=this.$section.find(".task-history-single-table");this.$field_entrance_exam_student_select_grade=this.$section.find("input[name='entrance-exam-student-select-grade']");this.$btn_reset_entrance_exam_attempts=this.$section.find("input[name='reset-entrance-exam-attempts']");this.$btn_delete_entrance_exam_state=this.$section.find("input[name='delete-entrance-exam-state']");this.$btn_rescore_entrance_exam=this.$section.find("input[name='rescore-entrance-exam']");this.$btn_skip_entrance_exam=this.$section.find("input[name='skip-entrance-exam']");this.$btn_entrance_exam_task_history=this.$section.find("input[name='entrance-exam-task-history']");this.$table_entrance_exam_task_history=this.$section.find(".entrance-exam-task-history-table");this.$field_problem_select_all=this.$section.find("input[name='problem-select-all']");this.$btn_reset_attempts_all=this.$section.find("input[name='reset-attempts-all']");this.$btn_rescore_problem_all=this.$section.find("input[name='rescore-problem-all']");this.$btn_task_history_all=this.$section.find("input[name='task-history-all']");this.$table_task_history_all=this.$section.find(".task-history-all-table");this.instructor_tasks=new(PendingInstructorTasks())(this.$section);this.$request_response_error_progress=find_and_assert(this.$section,".student-specific-container .request-response-error");this.$request_response_error_grade=find_and_assert(this.$section,".student-grade-container .request-response-error");this.$request_response_error_ee=this.$section.find(".entrance-exam-grade-container .request-response-error");this.$request_response_error_all=this.$section.find(".course-specific-container .request-response-error");this.$progress_link.click(function(e){var error_message,full_error_message,unique_student_identifier;e.preventDefault();unique_student_identifier=_this.$field_student_select_progress.val();if(!unique_student_identifier){return _this.$request_response_error_progress.text(gettext("Please enter a student email address or username."))}error_message=gettext("Error getting student progress url for '<%= student_id %>'. Make sure that the student identifier is spelled correctly.");full_error_message=_.template(error_message)({student_id:unique_student_identifier});return $.ajax({dataType:"json",url:_this.$progress_link.data("endpoint"),data:{unique_student_identifier:unique_student_identifier},success:_this.clear_errors_then(function(data){return window.location=data.progress_url}),error:std_ajax_err(function(){return _this.$request_response_error_progress.text(full_error_message)})})});this.$btn_reset_attempts_single.click(function(){var error_message,full_error_message,full_success_message,problem_to_reset,send_data,success_message,unique_student_identifier;unique_student_identifier=_this.$field_student_select_grade.val();problem_to_reset=_this.$field_problem_select_single.val();if(!unique_student_identifier){return _this.$request_response_error_grade.text(gettext("Please enter a student email address or username."))}if(!problem_to_reset){return _this.$request_response_error_grade.text(gettext("Please enter a problem location."))}send_data={unique_student_identifier:unique_student_identifier,problem_to_reset:problem_to_reset,delete_module:false};success_message=gettext("Success! Problem attempts reset for problem '<%= problem_id %>' and student '<%= student_id %>'.");error_message=gettext("Error resetting problem attempts for problem '<%= problem_id %>' and student '<%= student_id %>'. Make sure that the problem and student identifiers are complete and correct.");full_success_message=_.template(success_message)({problem_id:problem_to_reset,student_id:unique_student_identifier});full_error_message=_.template(error_message)({problem_id:problem_to_reset,student_id:unique_student_identifier});return $.ajax({dataType:"json",url:_this.$btn_reset_attempts_single.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(){return alert(full_success_message)}),error:std_ajax_err(function(){return _this.$request_response_error_grade.text(full_error_message)})})});this.$btn_delete_state_single.click(function(){var confirm_message,error_message,full_confirm_message,full_error_message,problem_to_reset,send_data,unique_student_identifier;unique_student_identifier=_this.$field_student_select_grade.val();problem_to_reset=_this.$field_problem_select_single.val();if(!unique_student_identifier){return _this.$request_response_error_grade.text(gettext("Please enter a student email address or username."))}if(!problem_to_reset){return _this.$request_response_error_grade.text(gettext("Please enter a problem location."))}confirm_message=gettext("Delete student '<%= student_id %>'s state on problem '<%= problem_id %>'?");full_confirm_message=_.template(confirm_message)({student_id:unique_student_identifier,problem_id:problem_to_reset});if(window.confirm(full_confirm_message)){send_data={unique_student_identifier:unique_student_identifier,problem_to_reset:problem_to_reset,delete_module:true};error_message=gettext("Error deleting student '<%= student_id %>'s state on problem '<%= problem_id %>'. Make sure that the problem and student identifiers are complete and correct.");full_error_message=_.template(error_message)({student_id:unique_student_identifier,problem_id:problem_to_reset});return $.ajax({dataType:"json",url:_this.$btn_delete_state_single.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(){
return alert(gettext("Module state successfully deleted."))}),error:std_ajax_err(function(){return _this.$request_response_error_grade.text(full_error_message)})})}else{return _this.clear_errors()}});this.$btn_rescore_problem_single.click(function(){var error_message,full_error_message,full_success_message,problem_to_reset,send_data,success_message,unique_student_identifier;unique_student_identifier=_this.$field_student_select_grade.val();problem_to_reset=_this.$field_problem_select_single.val();if(!unique_student_identifier){return _this.$request_response_error_grade.text(gettext("Please enter a student email address or username."))}if(!problem_to_reset){return _this.$request_response_error_grade.text(gettext("Please enter a problem location."))}send_data={unique_student_identifier:unique_student_identifier,problem_to_reset:problem_to_reset};success_message=gettext("Started rescore problem task for problem '<%= problem_id %>' and student '<%= student_id %>'. Click the 'Show Background Task History for Student' button to see the status of the task.");full_success_message=_.template(success_message)({student_id:unique_student_identifier,problem_id:problem_to_reset});error_message=gettext("Error starting a task to rescore problem '<%= problem_id %>' for student '<%= student_id %>'. Make sure that the the problem and student identifiers are complete and correct.");full_error_message=_.template(error_message)({student_id:unique_student_identifier,problem_id:problem_to_reset});return $.ajax({dataType:"json",url:_this.$btn_rescore_problem_single.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(){return alert(full_success_message)}),error:std_ajax_err(function(){return _this.$request_response_error_grade.text(full_error_message)})})});this.$btn_task_history_single.click(function(){var error_message,full_error_message,problem_to_reset,send_data,unique_student_identifier;unique_student_identifier=_this.$field_student_select_grade.val();problem_to_reset=_this.$field_problem_select_single.val();if(!unique_student_identifier){return _this.$request_response_error_grade.text(gettext("Please enter a student email address or username."))}if(!problem_to_reset){return _this.$request_response_error_grade.text(gettext("Please enter a problem location."))}send_data={unique_student_identifier:unique_student_identifier,problem_location_str:problem_to_reset};error_message=gettext("Error getting task history for problem '<%= problem_id %>' and student '<%= student_id %>'. Make sure that the problem and student identifiers are complete and correct.");full_error_message=_.template(error_message)({student_id:unique_student_identifier,problem_id:problem_to_reset});return $.ajax({dataType:"json",url:_this.$btn_task_history_single.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(data){return create_task_list_table(_this.$table_task_history_single,data.tasks)}),error:std_ajax_err(function(){return _this.$request_response_error_grade.text(full_error_message)})})});this.$btn_reset_entrance_exam_attempts.click(function(){var send_data,unique_student_identifier;unique_student_identifier=_this.$field_entrance_exam_student_select_grade.val();if(!unique_student_identifier){return _this.$request_response_error_ee.text(gettext("Please enter a student email address or username."))}send_data={unique_student_identifier:unique_student_identifier,delete_module:false};return $.ajax({dataType:"json",url:_this.$btn_reset_entrance_exam_attempts.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(){var full_success_message,success_message;success_message=gettext("Entrance exam attempts is being reset for student '{student_id}'.");full_success_message=interpolate_text(success_message,{student_id:unique_student_identifier});return alert(full_success_message)}),error:std_ajax_err(function(){var error_message,full_error_message;error_message=gettext("Error resetting entrance exam attempts for student '{student_id}'. Make sure student identifier is correct.");full_error_message=interpolate_text(error_message,{student_id:unique_student_identifier});return _this.$request_response_error_ee.text(full_error_message)})})});this.$btn_rescore_entrance_exam.click(function(){var send_data,unique_student_identifier;unique_student_identifier=_this.$field_entrance_exam_student_select_grade.val();if(!unique_student_identifier){return _this.$request_response_error_ee.text(gettext("Please enter a student email address or username."))}send_data={unique_student_identifier:unique_student_identifier};return $.ajax({dataType:"json",url:_this.$btn_rescore_entrance_exam.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(){var full_success_message,success_message;success_message=gettext("Started entrance exam rescore task for student '{student_id}'. Click the 'Show Background Task History for Student' button to see the status of the task.");full_success_message=interpolate_text(success_message,{student_id:unique_student_identifier});return alert(full_success_message)}),error:std_ajax_err(function(){var error_message,full_error_message;error_message=gettext("Error starting a task to rescore entrance exam for student '{student_id}'. Make sure that entrance exam has problems in it and student identifier is correct.");full_error_message=interpolate_text(error_message,{student_id:unique_student_identifier});return _this.$request_response_error_ee.text(full_error_message)})})});this.$btn_skip_entrance_exam.click(function(){var confirm_message,full_confirm_message,send_data,unique_student_identifier;unique_student_identifier=_this.$field_entrance_exam_student_select_grade.val();if(!unique_student_identifier){return _this.$request_response_error_ee.text(gettext("Enter a student's username or email address."))}confirm_message=gettext("Do you want to allow this student ('{student_id}') to skip the entrance exam?");full_confirm_message=interpolate_text(confirm_message,{student_id:unique_student_identifier});if(window.confirm(full_confirm_message)){send_data={unique_student_identifier:unique_student_identifier};return $.ajax({dataType:"json",url:_this.$btn_skip_entrance_exam.data("endpoint"),data:send_data,type:"POST",success:_this.clear_errors_then(function(data){return alert(data.message)}),error:std_ajax_err(function(){var error_message;error_message=gettext("An error occurred. Make sure that the student's username or email address is correct and try again.");return _this.$request_response_error_ee.text(error_message)})})}});this.$btn_delete_entrance_exam_state.click(function(){var send_data,unique_student_identifier;unique_student_identifier=_this.$field_entrance_exam_student_select_grade.val();if(!unique_student_identifier){return _this.$request_response_error_ee.text(gettext("Please enter a student email address or username."))}send_data={unique_student_identifier:unique_student_identifier,delete_module:true};return $.ajax({dataType:"json",url:_this.$btn_delete_entrance_exam_state.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(){var full_success_message,success_message;success_message=gettext("Entrance exam state is being deleted for student '{student_id}'.");full_success_message=interpolate_text(success_message,{student_id:unique_student_identifier});return alert(full_success_message)}),error:std_ajax_err(function(){var error_message,full_error_message;error_message=gettext("Error deleting entrance exam state for student '{student_id}'. Make sure student identifier is correct.");full_error_message=interpolate_text(error_message,{student_id:unique_student_identifier});return _this.$request_response_error_ee.text(full_error_message)})})});this.$btn_entrance_exam_task_history.click(function(){var send_data,unique_student_identifier;unique_student_identifier=_this.$field_entrance_exam_student_select_grade.val();if(!unique_student_identifier){return _this.$request_response_error_ee.text(gettext("Enter a student's username or email address."))}send_data={unique_student_identifier:unique_student_identifier};return $.ajax({dataType:"json",url:_this.$btn_entrance_exam_task_history.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(data){return create_task_list_table(_this.$table_entrance_exam_task_history,data.tasks)}),error:std_ajax_err(function(){var error_message,full_error_message;error_message=gettext("Error getting entrance exam task history for student '{student_id}'. Make sure student identifier is correct.");full_error_message=interpolate_text(error_message,{student_id:unique_student_identifier});return _this.$request_response_error_ee.text(full_error_message)})})});this.$btn_reset_attempts_all.click(function(){var confirm_message,error_message,full_confirm_message,full_error_message,full_success_message,problem_to_reset,send_data,success_message;problem_to_reset=_this.$field_problem_select_all.val();if(!problem_to_reset){return _this.$request_response_error_all.text(gettext("Please enter a problem location."))}confirm_message=gettext("Reset attempts for all students on problem '<%= problem_id %>'?");full_confirm_message=_.template(confirm_message)({problem_id:problem_to_reset});if(window.confirm(full_confirm_message)){send_data={all_students:true,problem_to_reset:problem_to_reset};success_message=gettext("Successfully started task to reset attempts for problem '<%= problem_id %>'. Click the 'Show Background Task History for Problem' button to see the status of the task.");full_success_message=_.template(success_message)({problem_id:problem_to_reset});error_message=gettext("Error starting a task to reset attempts for all students on problem '<%= problem_id %>'. Make sure that the problem identifier is complete and correct.");full_error_message=_.template(error_message)({problem_id:problem_to_reset});return $.ajax({dataType:"json",url:_this.$btn_reset_attempts_all.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(){return alert(full_success_message)}),error:std_ajax_err(function(){return _this.$request_response_error_all.text(full_error_message)})})}else{return _this.clear_errors()}});this.$btn_rescore_problem_all.click(function(){var confirm_message,error_message,full_confirm_message,full_error_message,full_success_message,problem_to_reset,send_data,success_message;problem_to_reset=_this.$field_problem_select_all.val();if(!problem_to_reset){return _this.$request_response_error_all.text(gettext("Please enter a problem location."))}confirm_message=gettext("Rescore problem '<%= problem_id %>' for all students?");full_confirm_message=_.template(confirm_message)({problem_id:problem_to_reset});if(window.confirm(full_confirm_message)){send_data={all_students:true,problem_to_reset:problem_to_reset};success_message=gettext("Successfully started task to rescore problem '<%= problem_id %>' for all students. Click the 'Show Background Task History for Problem' button to see the status of the task.");full_success_message=_.template(success_message)({problem_id:problem_to_reset});error_message=gettext("Error starting a task to rescore problem '<%= problem_id %>'. Make sure that the problem identifier is complete and correct.");full_error_message=_.template(error_message)({problem_id:problem_to_reset});return $.ajax({dataType:"json",url:_this.$btn_rescore_problem_all.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(){return alert(full_success_message)}),error:std_ajax_err(function(){return _this.$request_response_error_all.text(full_error_message)})})}else{return _this.clear_errors()}});this.$btn_task_history_all.click(function(){var send_data;send_data={problem_location_str:_this.$field_problem_select_all.val()};if(!send_data.problem_location_str){return _this.$request_response_error_all.text(gettext("Please enter a problem location."))}return $.ajax({dataType:"json",url:_this.$btn_task_history_all.data("endpoint"),data:send_data,success:_this.clear_errors_then(function(data){return create_task_list_table(_this.$table_task_history_all,data.tasks)}),error:std_ajax_err(function(){return _this.$request_response_error_all.text(gettext("Error listing task history for this student and problem."))})})})}StudentAdmin.prototype.clear_errors_then=function(cb){this.$request_response_error_progress.empty();this.$request_response_error_grade.empty();this.$request_response_error_ee.empty();this.$request_response_error_all.empty();return function(){return cb!=null?cb.apply(this,arguments):void 0}};StudentAdmin.prototype.clear_errors=function(){this.$request_response_error_progress.empty();this.$request_response_error_grade.empty();this.$request_response_error_ee.empty();return this.$request_response_error_all.empty()};StudentAdmin.prototype.onClickTitle=function(){return this.instructor_tasks.task_poller.start()};StudentAdmin.prototype.onExit=function(){return this.instructor_tasks.task_poller.stop()};return StudentAdmin}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{StudentAdmin:StudentAdmin})}).call(this);(function(){var IntervalManager,KeywordValidator,ReportDownloads,create_email_content_table,create_email_message_views,created_formatter,find_and_assert,number_sent_formatter,plantInterval,plantTimeout,sent_by_formatter,setup_copy_email_button,subject_formatter,_this=this,__indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i}return-1};plantTimeout=function(ms,cb){return setTimeout(cb,ms)};plantInterval=function(ms,cb){return setInterval(cb,ms)};find_and_assert=function($root,selector){var item;item=$root.find(selector);if(item.length!==1){console.error("element selection failed for '"+selector+"' resulted in length "+item.length);throw"Failed Element Selection"}else{return item}};this.std_ajax_err=function(handler){return function(jqXHR,textStatus,errorThrown){console.warn("ajax error\ntextStatus: "+textStatus+"\nerrorThrown: "+errorThrown);return handler.apply(this,arguments)}};this.create_task_list_table=function($table_tasks,tasks_data){var $table_placeholder,columns,grid,options,table_data;$table_tasks.empty();options={enableCellNavigation:true,enableColumnReorder:false,autoHeight:true,rowHeight:100,forceFitColumns:true};columns=[{id:"task_type",field:"task_type",name:gettext("Task Type"),minWidth:102},{id:"task_input",field:"task_input",name:gettext("Task inputs"),minWidth:150},{id:"task_id",field:"task_id",name:gettext("Task ID"),minWidth:150},{id:"requester",field:"requester",name:gettext("Requester"),minWidth:80},{id:"created",field:"created",name:gettext("Submitted"),minWidth:120},{id:"duration_sec",field:"duration_sec",name:gettext("Duration (sec)"),minWidth:80},{id:"task_state",field:"task_state",name:gettext("State"),minWidth:80},{id:"status",field:"status",name:gettext("Task Status"),minWidth:80},{id:"task_message",field:"task_message",name:gettext("Task Progress"),minWidth:120}];table_data=tasks_data;$table_placeholder=$("<div/>",{"class":"slickgrid"});$table_tasks.append($table_placeholder);return grid=new Slick.Grid($table_placeholder,table_data,columns,options)};subject_formatter=function(row,cell,value,columnDef,dataContext){var subject_text;if(value===null){return gettext("An error occurred retrieving your email. Please try again later, and contact technical support if the problem persists.")}subject_text=$("<span>").text(value["subject"]).html();return'<p><a href="#email_message_'+value["id"]+'" id="email_message_'+value["id"]+'_trig">'+subject_text+"</a></p>"};sent_by_formatter=function(row,cell,value,columnDef,dataContext){if(value===null){return"<p>"+gettext("Unknown")+"</p>"}else{return"<p>"+value+"</p>"}};created_formatter=function(row,cell,value,columnDef,dataContext){if(value===null){return"<p>"+gettext("Unknown")+"</p>"}else{return"<p>"+value+"</p>"}};number_sent_formatter=function(row,cell,value,columndDef,dataContext){if(value===null){return"<p>"+gettext("Unknown")+"</p>"}else{return"<p>"+value+"</p>"}};create_email_content_table=function($table_emails,$table_emails_inner,email_data){var $table_placeholder,columns,grid,options,table_data;$table_emails_inner.empty();$table_emails.show();options={enableCellNavigation:true,enableColumnReorder:false,autoHeight:true,rowHeight:50,forceFitColumns:true};columns=[{id:"email",field:"email",name:gettext("Subject"),minWidth:80,cssClass:"email-content-cell",formatter:subject_formatter},{id:"requester",field:"requester",name:gettext("Sent By"),minWidth:80,maxWidth:100,cssClass:"email-content-cell",formatter:sent_by_formatter},{id:"created",field:"created",name:gettext("Time Sent"),minWidth:80,cssClass:"email-content-cell",formatter:created_formatter},{id:"number_sent",field:"number_sent",name:gettext("Number Sent"),minwidth:100,maxWidth:150,cssClass:"email-content-cell",formatter:number_sent_formatter}];table_data=email_data;$table_placeholder=$("<div/>",{"class":"slickgrid"});$table_emails_inner.append($table_placeholder);grid=new Slick.Grid($table_placeholder,table_data,columns,options);return $table_emails.append($("<br/>"))};create_email_message_views=function($messages_wrapper,emails){var $close_button,$email_content,$email_header,$email_wrapper,$message,$message_content,email_id,email_info,subject_text,_i,_len;$messages_wrapper.empty();for(_i=0,_len=emails.length;_i<_len;_i++){email_info=emails[_i];if(!email_info.email){return}email_id=email_info.email["id"];$message_content=$("<section>",{"aria-hidden":"true","class":"modal email-modal",id:"email_message_"+email_id});$email_wrapper=$("<div>",{"class":"inner-wrapper email-content-wrapper"});$email_header=$("<div>",{"class":"email-content-header"});$email_header.append($("<input>",{type:"button",name:"copy-email-body-text",value:gettext("Copy Email To Editor"),id:"copy_email_"+email_id}));$close_button=$("<a>",{href:"#","class":"close-modal"});$close_button.append($("<i>",{"class":"icon fa fa-times"}));$email_header.append($close_button);subject_text=$("<span>").text(email_info.email["subject"]).html();$email_header.append($("<h2>",{"class":"message-bold"}).html("<em>"+gettext("Subject:")+"</em> "+subject_text));$email_header.append($("<h2>",{"class":"message-bold"}).html("<em>"+gettext("Sent By:")+"</em> "+email_info.requester));$email_header.append($("<h2>",{"class":"message-bold"}).html("<em>"+gettext("Time Sent:")+"</em> "+email_info.created));$email_header.append($("<h2>",{"class":"message-bold"}).html("<em>"+gettext("Sent To:")+"</em> "+email_info.sent_to));$email_wrapper.append($email_header);$email_wrapper.append($("<hr>"));$email_content=$("<div>",{"class":"email-content-message"});$email_content.append($("<h2>",{"class":"message-bold"}).html("<em>"+gettext("Message:")+"</em>"));$message=$("<div>").html(email_info.email["html_message"]);$email_content.append($message);$email_wrapper.append($email_content);$message_content.append($email_wrapper);$messages_wrapper.append($message_content);$("#email_message_"+email_info.email["id"]+"_trig").leanModal({closeButton:".close-modal",copyEmailButton:"#copy_email_"+email_id});setup_copy_email_button(email_id,email_info.email["html_message"],email_info.email["subject"])}};setup_copy_email_button=function(email_id,html_message,subject){var _this=this;return $("#copy_email_"+email_id).click(function(){var editor;editor=tinyMCE.get("mce_0");editor.setContent(html_message);return $("#id_subject").val(subject)})};IntervalManager=function(){function IntervalManager(ms,fn){this.ms=ms;this.fn=fn;this.intervalID=null}IntervalManager.prototype.start=function(){this.fn();if(this.intervalID===null){return this.intervalID=setInterval(this.fn,this.ms)}};IntervalManager.prototype.stop=function(){clearInterval(this.intervalID);return this.intervalID=null};return IntervalManager}();this.PendingInstructorTasks=function(){function PendingInstructorTasks($section){var TASK_LIST_POLL_INTERVAL,_this=this;this.$section=$section;this.reload_running_tasks_list=function(){return PendingInstructorTasks.prototype.reload_running_tasks_list.apply(_this,arguments)};this.$running_tasks_section=find_and_assert(this.$section,".running-tasks-section");this.$table_running_tasks=find_and_assert(this.$section,".running-tasks-table");this.$no_tasks_message=find_and_assert(this.$section,".no-pending-tasks-message");if(this.$table_running_tasks.length){TASK_LIST_POLL_INTERVAL=2e4;this.reload_running_tasks_list();this.task_poller=new IntervalManager(TASK_LIST_POLL_INTERVAL,function(){return _this.reload_running_tasks_list()})}}PendingInstructorTasks.prototype.reload_running_tasks_list=function(){var list_endpoint,_this=this;list_endpoint=this.$table_running_tasks.data("endpoint");return $.ajax({dataType:"json",url:list_endpoint,success:function(data){if(data.tasks.length){create_task_list_table(_this.$table_running_tasks,data.tasks);_this.$no_tasks_message.hide();return _this.$running_tasks_section.show()}else{console.log("No pending tasks to display");_this.$running_tasks_section.hide();_this.$no_tasks_message.empty();_this.$no_tasks_message.append($("<p>").text(gettext("No tasks currently running.")));return _this.$no_tasks_message.show()}},error:std_ajax_err(function(){return console.error("Error finding pending tasks to display")})})};return PendingInstructorTasks}();KeywordValidator=function(){function KeywordValidator(){}KeywordValidator.keyword_regex=/%%+[^%]+%%/g;KeywordValidator.keywords=["%%USER_ID%%","%%USER_FULLNAME%%","%%COURSE_DISPLAY_NAME%%","%%COURSE_END_DATE%%"];KeywordValidator.validate_string=function(string){var found_keyword,found_keywords,invalid_keywords,is_valid,keywords,regex_match,_fn,_i,_len;regex_match=string.match(KeywordValidator.keyword_regex);found_keywords=regex_match===null?[]:regex_match;invalid_keywords=[];is_valid=true;keywords=KeywordValidator.keywords;_fn=function(found_keyword){if(__indexOf.call(keywords,found_keyword)<0){return invalid_keywords.push(found_keyword)}};for(_i=0,_len=found_keywords.length;_i<_len;_i++){found_keyword=found_keywords[_i];_fn(found_keyword)}if(invalid_keywords.length!==0){is_valid=false}return{is_valid:is_valid,invalid_keywords:invalid_keywords}};return KeywordValidator}.call(this);ReportDownloads=function(){function ReportDownloads($section){var POLL_INTERVAL,_this=this;this.$section=$section;this.$report_downloads_table=this.$section.find(".report-downloads-table");POLL_INTERVAL=2e4;this.downloads_poller=new window.InstructorDashboard.util.IntervalManager(POLL_INTERVAL,function(){return _this.reload_report_downloads()})}ReportDownloads.prototype.reload_report_downloads=function(){var endpoint,_this=this;endpoint=this.$report_downloads_table.data("endpoint");return $.ajax({dataType:"json",url:endpoint,success:function(data){if(data.downloads.length){return _this.create_report_downloads_table(data.downloads)}else{return console.log("No reports ready for download")}},error:function(std_ajax_err){return console.error("Error finding report downloads")}})};ReportDownloads.prototype.create_report_downloads_table=function(report_downloads_data){var $table_placeholder,columns,grid,options,_this=this;this.$report_downloads_table.empty();options={enableCellNavigation:true,enableColumnReorder:false,rowHeight:30,forceFitColumns:true};columns=[{id:"link",field:"link",name:gettext("File Name"),toolTip:gettext("Links are generated on demand and expire within 5 minutes due to the sensitive nature of student information."),sortable:false,minWidth:150,cssClass:"file-download-link",formatter:function(row,cell,value,columnDef,dataContext){return'<a target="_blank" href="'+dataContext["url"]+'">'+dataContext["name"]+"</a>"}}];$table_placeholder=$("<div/>",{"class":"slickgrid"});this.$report_downloads_table.append($table_placeholder);grid=new Slick.Grid($table_placeholder,report_downloads_data,columns,options);grid.onClick.subscribe(function(event){var report_url;report_url=event.target.href;if(report_url){return Logger.log("edx.instructor.report.downloaded",{report_url:report_url})}});return grid.autosizeColumns()};return ReportDownloads}();if(typeof _!=="undefined"&&_!==null){_.defaults(window,{InstructorDashboard:{}});window.InstructorDashboard.util={plantTimeout:plantTimeout,plantInterval:plantInterval,std_ajax_err:std_ajax_err,IntervalManager:IntervalManager,create_task_list_table:create_task_list_table,create_email_content_table:create_email_content_table,create_email_message_views:create_email_message_views,PendingInstructorTasks:PendingInstructorTasks,KeywordValidator:KeywordValidator,ReportDownloads:ReportDownloads}}}).call(this);var edx=edx||{};var onCertificatesReady=null;(function($,gettext,_){"use strict";edx.instructor_dashboard=edx.instructor_dashboard||{};edx.instructor_dashboard.certificates={};onCertificatesReady=function(){$("#enable-certificates-form").on("submit",function(event){var isEnabled=$("#certificates-enabled").val()==="true",confirmMessage="";if(isEnabled){confirmMessage=gettext("Allow students to generate certificates for this course?")}else{confirmMessage=gettext("Prevent students from generating certificates in this course?")}if(!confirm(confirmMessage)){event.preventDefault()}});$("#refresh-example-certificate-status").on("click",function(){window.location.reload()});var $section=$("section#certificates");$section.on("click","#btn-start-generating-certificates",function(event){if(!confirm(gettext("Start generating certificates for all students in this course?"))){event.preventDefault();return}var $btn_generating_certs=$(this),$certificate_generation_status=$(".certificate-generation-status");var url=$btn_generating_certs.data("endpoint");$.ajax({type:"POST",url:url,success:function(data){$btn_generating_certs.attr("disabled","disabled");$certificate_generation_status.text(data.message)},error:function(jqXHR,textStatus,errorThrown){$certificate_generation_status.text(gettext("Error while generating certificates. Please try again."))}})});$section.on("click","#btn-start-regenerating-certificates",function(event){if(!confirm(gettext("Start regenerating certificates for students in this course?"))){event.preventDefault();return}var $btn_regenerating_certs=$(this),$certificate_regeneration_status=$(".certificate-regeneration-status"),url=$btn_regenerating_certs.data("endpoint");$.ajax({type:"POST",data:$("#certificate-regenerating-form").serializeArray(),url:url,success:function(data){$btn_regenerating_certs.attr("disabled","disabled");if(data.success){$certificate_regeneration_status.text(data.message).addClass("message")}else{$certificate_regeneration_status.text(data.message).addClass("message")}},error:function(jqXHR){try{var response=JSON.parse(jqXHR.responseText);$certificate_regeneration_status.text(gettext(response.message)).addClass("message")}catch(error){$certificate_regeneration_status.text(gettext("Error while regenerating certificates. Please try again.")).addClass("message")}}})})};$(onCertificatesReady);var Certificates=function(){function Certificates($section){$section.data("wrapper",this);this.instructor_tasks=new window.InstructorDashboard.util.PendingInstructorTasks($section)}Certificates.prototype.onClickTitle=function(){return this.instructor_tasks.task_poller.start()};Certificates.prototype.onExit=function(){return this.instructor_tasks.task_poller.stop()};return Certificates}();_.defaults(window,{InstructorDashboard:{}});_.defaults(window.InstructorDashboard,{sections:{}});_.defaults(window.InstructorDashboard.sections,{Certificates:Certificates})})($,gettext,_);(function(){var CohortManagement;CohortManagement=function(){function CohortManagement($section){this.$section=$section;this.$section.data("wrapper",this)}CohortManagement.prototype.onClickTitle=function(){};return CohortManagement}();window.InstructorDashboard.sections.CohortManagement=CohortManagement}).call(this);var edx=edx||{};(function(Backbone,$,_,gettext){"use strict";edx.instructor_dashboard=edx.instructor_dashboard||{};edx.instructor_dashboard.ecommerce={};edx.instructor_dashboard.ecommerce.ExpiryCouponView=Backbone.View.extend({el:"li#add-coupon-modal-field-expiry",events:{'click input[type="checkbox"]':"clicked"},initialize:function(){$('li#add-coupon-modal-field-expiry input[name="expiration_date"]').hide();_.bindAll(this,"clicked")},clicked:function(event){if(event.currentTarget.checked){this.$el.find("#coupon_expiration_date").show();this.$el.find("#coupon_expiration_date").focus()}else{this.$el.find("#coupon_expiration_date").hide()}}});$(function(){var $registration_code_status_form=$("form#set_regcode_status_form"),$lookup_button=$("#lookup_regcode",$registration_code_status_form),$registration_code_status_form_error=$("#regcode_status_form_error",$registration_code_status_form),$registration_code_status_form_success=$("#regcode_status_form_success",$registration_code_status_form);$("#coupon_expiration_date").datepicker({minDate:0});var view=new edx.instructor_dashboard.ecommerce.ExpiryCouponView;$('input[name="user-enrollment-report"]').click(function(){var url=$(this).data("endpoint");$.ajax({dataType:"json",url:url,success:function(data){$("#enrollment-report-request-response").text(data["status"]);return $("#enrollment-report-request-response").css({display:"block"})},error:function(std_ajax_err){$("#enrollment-report-request-response-error").text(gettext('There was a problem creating the report. Select "Create Executive Summary" to try again.'));return $("#enrollment-report-request-response-error").css({display:"block"})}})});$('input[name="exec-summary-report"]').click(function(){var url=$(this).data("endpoint");$.ajax({dataType:"json",url:url,success:function(data){$("#exec-summary-report-request-response").text(data["status"]);return $("#exec-summary-report-request-response").css({display:"block"})},error:function(std_ajax_err){$("#exec-summary-report-request-response-error").text(gettext('There was a problem creating the report. Select "Create Executive Summary" to try again.'));return $("#exec-summary-report-request-response-error").css({display:"block"})}})});$lookup_button.click(function(){$registration_code_status_form_error.hide();$lookup_button.attr("disabled",true);var url=$(this).data("endpoint");var lookup_registration_code=$('#set_regcode_status_form input[name="regcode_code"]').val();if(lookup_registration_code==""){$registration_code_status_form_error.show();$registration_code_status_form_error.text(gettext("Enter the enrollment code."));$lookup_button.removeAttr("disabled");return false}$.ajax({type:"GET",data:{registration_code:lookup_registration_code},url:url,success:function(data){var is_registration_code_valid=data.is_registration_code_valid,is_registration_code_redeemed=data.is_registration_code_redeemed,is_registration_code_exists=data.is_registration_code_exists;$lookup_button.removeAttr("disabled");if(is_registration_code_exists=="false"){$registration_code_status_form_error.hide();$registration_code_status_form_error.show();$registration_code_status_form_error.text(gettext(data.message))}else{var actions_links="";var actions=[];if(is_registration_code_valid==true){actions.push({action_url:data.registration_code_detail_url,action_name:gettext("Cancel enrollment code"),registration_code:lookup_registration_code,action_type:"invalidate_registration_code"})}else{actions.push({action_url:data.registration_code_detail_url,action_name:gettext("Restore enrollment code"),registration_code:lookup_registration_code,action_type:"validate_registration_code"})}if(is_registration_code_redeemed==true){actions.push({action_url:data.registration_code_detail_url,action_name:gettext("Mark enrollment code as unused"),registration_code:lookup_registration_code,action_type:"unredeem_registration_code"})}is_registration_code_redeemed=is_registration_code_redeemed?"Yes":"No";is_registration_code_valid=is_registration_code_valid?"Yes":"No";var template_data=_.template($("#enrollment-code-lookup-links-tpl").text());var registration_code_lookup_actions=template_data({
lookup_registration_code:lookup_registration_code,is_registration_code_redeemed:is_registration_code_redeemed,is_registration_code_valid:is_registration_code_valid,actions:actions});$registration_code_status_form.next().remove();$(registration_code_lookup_actions).insertAfter($registration_code_status_form)}},error:function(jqXHR,textStatus,errorThrown){var data=$.parseJSON(jqXHR.responseText);$lookup_button.removeAttr("disabled");$registration_code_status_form_error.text(gettext(data.message));$registration_code_status_form_error.show()}})});$("section#invalidate_registration_code_modal").on("click","a.registration_code_action_link",function(event){event.preventDefault();$registration_code_status_form_error.attr("style","display: none");$lookup_button.attr("disabled",true);var url=$(this).data("endpoint");var action_type=$(this).data("action-type");var registration_code=$(this).data("registration-code");$.ajax({type:"POST",data:{registration_code:registration_code,action_type:action_type},url:url,success:function(data){$('#set_regcode_status_form input[name="regcode_code"]').val("");$registration_code_status_form.next().remove();$registration_code_status_form_error.hide();$lookup_button.removeAttr("disabled");$registration_code_status_form_success.text(gettext(data.message));$registration_code_status_form_success.show();$registration_code_status_form_success.fadeOut(3e3)},error:function(jqXHR,textStatus,errorThrown){var data=$.parseJSON(jqXHR.responseText);$registration_code_status_form_error.hide();$lookup_button.removeAttr("disabled");$registration_code_status_form_error.show();$registration_code_status_form_error.text(gettext(data.message))}})})})})(Backbone,$,_,gettext);$(function(){var icons={header:"ui-icon-carat-1-e",activeHeader:"ui-icon-carat-1-s"};var proctoringAccordionPane=$("#proctoring-accordion");proctoringAccordionPane.accordion({heightStyle:"content",activate:function(event,ui){var active=proctoringAccordionPane.accordion("option","active");$.cookie("saved_index",null);$.cookie("saved_index",active)},animate:400,header:"> div.wrap >h2",icons:icons,active:isNaN(parseInt($.cookie("saved_index")))?0:parseInt($.cookie("saved_index")),collapsible:true})});
